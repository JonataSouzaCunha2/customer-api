components:
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas:
        Customer:
            properties:
                name:
                    type: string
                createdAt:
                    type: string
                telephone:
                    type: string
                email:
                    type: string
                cpf:
                    type: string
                age:
                    type: number
                    format: double
                id:
                    type: string
            required:
                - name
                - createdAt
                - telephone
                - email
                - cpf
                - age
                - id
            type: object
            additionalProperties: false
        ErrorResult:
            properties:
                message:
                    type: string
            required:
                - message
            type: object
            additionalProperties: false
        CreateCustomer:
            properties:
                name:
                    type: string
                telephone:
                    type: string
                email:
                    type: string
                    pattern: '^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'
                cpf:
                    type: string
                age:
                    type: integer
                    format: int32
                    minimum: 0
                    maximum: 200
            required:
                - name
                - telephone
                - email
                - cpf
                - age
            type: object
            additionalProperties: false
        UUID:
            type: string
            description: "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)"
            pattern: '[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}'
        UpdateCustomer:
            properties:
                name:
                    type: string
                telephone:
                    type: string
                email:
                    type: string
                    pattern: '^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'
                age:
                    type: integer
                    format: int32
                    minimum: 0
                    maximum: 200
            type: object
            additionalProperties: false
    securitySchemes: {}
info:
    title: customers
    version: 1.0.0
    license:
        name: ISC
    contact: {}
openapi: 3.0.0
paths:
    /customers:
        post:
            operationId: Create
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - {$ref: '#/components/schemas/Customer'}
                                    - {$ref: '#/components/schemas/ErrorResult'}
                '400':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '404':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '500':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
            description: 'Insert an new customer'
            tags:
                - Customers
            security: []
            parameters: []
            requestBody:
                description: 'Extra information required to insert the customer'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCustomer'
        get:
            operationId: List
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - {items: {$ref: '#/components/schemas/Customer'}, type: array}
                                    - {$ref: '#/components/schemas/ErrorResult'}
                '400':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '404':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '500':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
            description: 'Find all customers'
            tags:
                - Customers
            security: []
            parameters: []
    /customersSearch:
        get:
            operationId: Search
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - {items: {$ref: '#/components/schemas/Customer'}, type: array}
                                    - {$ref: '#/components/schemas/ErrorResult'}
                '400':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '404':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '500':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
            description: 'Search all customers by free text'
            tags:
                - Customers
            security: []
            parameters:
                -
                    description: 'Text that will search in all fields of the customer'
                    in: query
                    name: freeText
                    required: false
                    schema:
                        type: string
    '/customers/{customerId}':
        get:
            operationId: FindById
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - {$ref: '#/components/schemas/Customer'}
                                    - {$ref: '#/components/schemas/ErrorResult'}
                '400':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '404':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '500':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
            description: 'Find customer by customerId'
            tags:
                - Customers
            security: []
            parameters:
                -
                    description: 'The customer uuid'
                    in: path
                    name: customerId
                    required: true
                    schema:
                        $ref: '#/components/schemas/UUID'
        put:
            operationId: Update
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - {$ref: '#/components/schemas/Customer'}
                                    - {$ref: '#/components/schemas/ErrorResult'}
                '400':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '404':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '500':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
            description: 'Update an specific customer'
            tags:
                - Customers
            security: []
            parameters:
                -
                    description: 'The customer uuid'
                    in: path
                    name: customerId
                    required: true
                    schema:
                        $ref: '#/components/schemas/UUID'
            requestBody:
                description: 'Customer fields that will be updated'
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCustomer'
        delete:
            operationId: Delete
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - {type: string}
                                    - {$ref: '#/components/schemas/ErrorResult'}
                '400':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '404':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '500':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
            description: 'Delete an customer'
            tags:
                - Customers
            security: []
            parameters:
                -
                    description: 'The customer uuid'
                    in: path
                    name: customerId
                    required: true
                    schema:
                        $ref: '#/components/schemas/UUID'
    /health:
        get:
            operationId: HealthCheck
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                anyOf:
                                    - {properties: {message: {type: string}}, required: [message], type: object}
                                    - {$ref: '#/components/schemas/ErrorResult'}
                '400':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '404':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
                '500':
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResult'
            description: 'Health check'
            security: []
            parameters: []
servers:
    -
        url: 'https://localhost:3000/customers/api/v0'
